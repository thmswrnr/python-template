version: "3"

tasks:
  default:
    desc: Set up a Python virtual environment
    summary: |
      Uses the venv module to create a Python virtual environment
      in .venv in the current project repository. The command will
      look for the python3.12 binary in the current path. If your
      python3.12 binary is not the in path, you can set the environment
      variable PYTHON_BINARY to point to the correct binary.
    cmds:
      - rm -rf .venv
      - task: create-environment
      - task: compile-dependencies
      - task: install-dependencies
      - task: pre-commit

  create-environment:
    - ${PYTHON_BINARY:-python3.10} -m venv .venv

  compile-dependencies:
    desc: Compile dependencies
    summary: |
      Installs and updates pip and pip-tools and compiles
      all dependencies from the pyproject.toml. It first compiles
      the dependencies with --all-extras to compile a consistent,
      compatible set of dependencies. This set of dependencies is
      used as an constraint for required subsets of dependencies, e.g.
      to only compile dependencies for serving.

      The cli args are forwarded to the initial pip-compile call, enabling
      use of -P to upgrade individual packages, e.g. '-P pandas', and use of
      -U to upgrade all packages to their latest version.
    cmds:
      - .venv/bin/pip install pip-tools pip --upgrade
      - .venv/bin/pip-compile --strip-extras --all-extras pyproject.toml -o requirements/requirements.txt {{.CLI_ARGS}}

  install-dependencies:
    desc: Install dependencies
    preconditions:
      - sh: test -f requirements/requirements.txt
        msg: Please compile your dependencies first running setup:update-dependencies
    summary: |
      Uses pip-sync to install the development dependencies
      in the current virtual environment.
    cmds:
      - .venv/bin/pip install pip-tools pip --upgrade
      - .venv/bin/pip-sync --verbose requirements/requirements.txt
      - .venv/bin/pip install --no-deps --editable  .

  pre-commit:
    desc: Install dependencies
    cmds:
      - .venv/bin/pre-commit install --install-hooks